25/02/2016

object definition:
	Question, Answer, User, Topic, 

fields definition:

	Question: {
		int questionId
		String title
		String text
		String Date
		String Time

		int userId
		String nickName
		String userPhotoUrl

		int votingScore //Skolko raz progolosovali
		float answersAverage
		float rating
		
		Array answers[]
		Array topics[]
	}

	Answer: {
		int answerId;
		String text;
		String Date;
		String Time;
		int questionId;

		int userId
		String nickName
		String userPhotoUrl

		int rating
	}

	UserMini: {
		int userId
		String nickName
		String userPhotoUrl
		Array topics[]
		float rating		
		int submittedQuestionsNumber;
		float submittedQuewtionsAverage;
		int submittedAnswersNumber;
		float submittedAnswersAverage;
	}

	User: {
		int userId
		String username
		String password
		String nickName
		String desctription
		String userPhotoUrl;
		Array topics[]

		float rating	
		int submittedQuestionsNumber;
		float submittedQuewtionsAverage;
		int submittedAnswersNumber;
		float submittedAnswersAverage;

		Array lastAskedQuestions[]
		Array lastAnsweredQuestions[]
		Array lastAnswers[]
	}

	Topic: {
		int topicID
		String: topicName
		float: rating
		int userID // User 0 is the system
	}

User Events:

OnRateQuestion(Question,voterId,sign){ // sign = -1 or +1
	if(question.userId == voterId)( 
			Alert(" :( Taak ne deeeeelaetsaa!!! ");
	)
	float change = 0.2*sign;
	question.votingScore+=sign;
	question.rating += change;
	question.topic[ALL].rating += change;

	User user = Database.getUserById(question.userId);
	user.submittedQuestionsAverage += (change/user.submittedQuestionsNumber);
	user.rating+=0.2*(change/user.submittedQuestionsNumber);
}
./brs/onratequestion

This event affects:
	 - 	list of tomics (most popular topics): No need in immediate request, client-side sending regular message about question rating change
	 -  order of exiting questions can change - request for exiting questions array
Question Rate request to server {questioId,sign}

OnRateAnswer(Question,Answer,voterID,sign){ 
	if(answer.userId == voterId)(
			Alert(" :( Taak ne deeeeelaetsaa!!! ");
	)
	answer.rating += sign;	
	question.answersAverage += sign/question.answers[].length;
	question.rating += 0.8 * sign/question.answers[].length;

	question.topic[ALL].rating += 0.8 * sign/question.answers[].length;
	
	User user = Database.getUserById(question.userId);
	user.submittedQuestionAvarage += 0.8*(sign/question.answers[].length)/user.dubmittedQuestionNumber;
	user.rating += 0.2*(0.8*(sign/question.answers[].length))/user.dubmittedQuestionNumber);
	Array topics[] = Database.getAllUserTOpics(answer.userId);
	topics[ALL who refer to this question].rating+=sign;

	User ansUser = Database.getUserById(answer.userId);
	ansUser.submittedAnswerAverage += sign/submitedAnsw4erNumber;
	ansUser.rating += (sign/submitedAnsw4erNumber)*0.8;
} 
./brs/onrateanswer

This event affects:
	 -	leaderBoard (immediate new request) // no eto poxuy po skolku mi ego ne gruzim
	 - 	list of tomics (most popular topics): No need in immediate request, client-side sending regular message about question rating change
	 -  order of exiting answers can change - request for exiting answers array
	 -  order of exiting questions can change - request for exiting questions array
Answer Rate request to server {answerId,sign}

submitQuestion - Request{title,text,date,time,userId,topics} 
submitQuestion - Response{Question}
./brs/submitquestion

Answer - Request{text,date,time,userId,questionId}
Answer - Response(Answer)
./brs/submitanswer

Get20UsersToLeaderBoard - Request {}
Get20UsersToLeaderBoard - Response {Array users[20]}
./brs/getuserleaderboard

Get20newQuestions - Request {page-number}
Get20newQuestions - Response {Array questions[20]}
./brs/getnewlysubmittedquestions

Get20TopRatedQuestions - Request {page-number}
Get20TopRatedQuestions - Response {Array questions[20]}
./brs/gettopratedquestions

Get5LastAskedQuestions - Request {}
Get5LastAskedQuestions - Response {Array questions[5]}
./brs/getlastaskedquestions

Get5LastAnsweredQuestions - Request {}
Get5LastAnsweredQuestions - Response {Array questions[5], Array answers[5]}
./brs/getlastansweredquestions

Get20MostPopularTopics - Request {page-nubmer}
Get20MostPopularTopics - Request {Array topice[20]}
./brs/getmostpopulartopics

Signin - Request {username, password} //after all the "cosmetic" checks
signIn - Response {UserMini};
./brs/login

Register - Request{username,nickname,password,description,userPhotoUrl};
Register - Response{UserMini};
./brs/register

Get20QuestionsByTopic - Request{topicId,page-number}
Get20QuestionsByTopic - Response {Array questions[20]}
./brs/getquestionsbytopic

